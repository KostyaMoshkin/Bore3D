#pragma once

#include "dataprovider.h"

#include <vector>
	// интерфейс абстрактного поставщика данных для отображения 3D-ствола скважины
	// данные представляются в виде массивов значений по глубинам для
	// радиусов или удвоенных радиусов (диаметров), располагающихся равномерно вокруг оси ствола скважины
	// на каждой глубине также задан поворот всей системы радиусов относительно условного направления на север
	class DATAPROVIDER_API IBoreData
	{
	public:
		IBoreData() = default;
		virtual ~IBoreData() {}

	public:
		virtual int GetCurveCount() = 0; // возвращает кол-во кривых радиусов
		virtual const std::vector<float>& GetDepths() = 0; // возвращает монотонный массив глубин  (возрастающий или убывающий)
		virtual const std::vector<float>& GetRadiusCurve(int iRadius) = 0; // возвращает массив значений i-го радиуса по глубинам, соответствующий массиву глубин
		virtual const std::vector<float>& GetRotation() = 0; // возвращает массив углов (в градусах) поворота первого радиуса относительно направления на север
		virtual bool IsDiameters() = 0; // возвращает true, если кривые представляют из себя удвоенные радиусы, иначе просто радиусы
	};
